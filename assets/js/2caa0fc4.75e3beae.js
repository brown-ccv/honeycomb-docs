"use strict";(self.webpackChunkhoneycomb=self.webpackChunkhoneycomb||[]).push([[71],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=s(n),d=o,h=p["".concat(c,".").concat(d)]||p[d]||u[d]||a;return n?r.createElement(h,i(i({ref:t},m),{},{components:n})):r.createElement(h,i({ref:t},m))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2482:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return i},default:function(){return u},frontMatter:function(){return a},metadata:function(){return l},toc:function(){return s}});var r=n(3117),o=(n(7294),n(3905));const a={id:"version_control",title:"Version Control"},i=void 0,l={unversionedId:"version_control",id:"version_control",title:"Version Control",description:"Git Overview",source:"@site/docs/version_control.md",sourceDirName:".",slug:"/version_control",permalink:"/honeycomb-docs/docs/version_control",draft:!1,editUrl:"https://github.com/brown-ccv/honeycomb-docs/edit/main/docs/version_control.md",tags:[],version:"current",lastUpdatedAt:1660072310,formattedLastUpdatedAt:"Aug 9, 2022",frontMatter:{id:"version_control",title:"Version Control"},sidebar:"someSidebar",previous:{title:"Quick Start",permalink:"/honeycomb-docs/docs/quick_start"},next:{title:"Set up Firebase",permalink:"/honeycomb-docs/docs/firebase"}},c={},s=[{value:"Git Overview",id:"git-overview",level:2},{value:"Comment styles",id:"comment-styles",level:3},{value:"Cheatsheet",id:"cheatsheet",level:2},{value:"Alternative options",id:"alternative-options",level:3},{value:"Clone repository",id:"clone-repository",level:4},{value:"Select a branch or create a new branch",id:"select-a-branch-or-create-a-new-branch",level:4},{value:"Commit changes and push",id:"commit-changes-and-push",level:4},{value:"Create a Pull Request",id:"create-a-pull-request",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Git Workflow",id:"git-workflow",level:3},{value:"Stay up-to-date with Honeycomb template repo",id:"stay-up-to-date-with-honeycomb-template-repo",level:2},{value:"Add honeycomb as an additional remote",id:"add-honeycomb-as-an-additional-remote",level:3}],m={toc:s};function u(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"git-overview"},"Git Overview"),(0,o.kt)("p",null,"Git is a version control system that enables you to track changes to files. With Git, you are able to revert files back to previous versions, restore deleted files, remove added files and even track down where a particular line of code was introduced."),(0,o.kt)("p",null,"Nearly all operations that are performed by Git are in you local computing environment, for the exception of few used purely to synchronize with a remote. Some of the most common git operations are depicted below. "),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(9004).Z,width:"874",height:"509"})),(0,o.kt)("p",null,"If you would like to make any changes to current repository, it is always good to start with creating a feature branch, where you can save all the changes."),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(6793).Z,width:"773",height:"337"})),(0,o.kt)("h3",{id:"comment-styles"},"Comment styles"),(0,o.kt)("p",null,"We encourage using ",(0,o.kt)("a",{parentName:"p",href:"http://commitizen.github.io/cz-cli/"},"Commitizen"),", a great tool for recording descriptions of commits in a standardized format which makes it easier for people to understand what changed in the code."),(0,o.kt)("h2",{id:"cheatsheet"},"Cheatsheet"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Command"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Brief"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"git add ","<","files",">"),(0,o.kt)("td",{parentName:"tr",align:"left"},"add a file to next commit ","(","stage",")")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"git commit -m ","<","message",">"),(0,o.kt)("td",{parentName:"tr",align:"left"},"commit staged files")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"git push"),(0,o.kt)("td",{parentName:"tr",align:"left"},"upload staged commit to repo")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"git pull"),(0,o.kt)("td",{parentName:"tr",align:"left"},"get remote repo commits and download ","(","try and resolve conflicts",")")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"git clone ","<","url",">"),(0,o.kt)("td",{parentName:"tr",align:"left"},"download entire repository")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"git checkout ","<","branch",">"),(0,o.kt)("td",{parentName:"tr",align:"left"},"checkout and create the branch you want to use")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'# clone project \ngit clone https://github.com/brown-ccv/honeycomb.git\n# create branch with your feature\ngit checkout -b feature_name\n# check the status of your repositoey\ngit status\n# commit file contents to the local repository\ngit commit -am "My feature is ready"\n# specific message\n# push file contents to the remote (i.e. cloud) repository\ngit push origin feature_name\n')),(0,o.kt)("h3",{id:"alternative-options"},"Alternative options"),(0,o.kt)("p",null,"Instead of using commands in the terminal, you can also download ",(0,o.kt)("a",{parentName:"p",href:"https://desktop.github.com/"},"GitHub desktop"),". It is very intuitive to use. "),(0,o.kt)("h4",{id:"clone-repository"},"Clone repository"),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(7972).Z,width:"2144",height:"1544"})),(0,o.kt)("h4",{id:"select-a-branch-or-create-a-new-branch"},"Select a branch or create a new branch"),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(8140).Z,width:"2144",height:"1544"})),(0,o.kt)("h4",{id:"commit-changes-and-push"},"Commit changes and push"),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(5868).Z,width:"2144",height:"1544"})),(0,o.kt)("h2",{id:"create-a-pull-request"},"Create a Pull Request"),(0,o.kt)("p",null,"Pull requests are useful before you merge your branch with the main branch. You can request a review from your colleagues and check for any conflicts with the main branch. After you pushed all the changes to your branch, you can go to the original GitHub repository and click on the pull request.  "),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(3997).Z,width:"2408",height:"1330"})),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(9817).Z,width:"2408",height:"1902"})),(0,o.kt)("h2",{id:"best-practices"},"Best Practices"),(0,o.kt)("h3",{id:"git-workflow"},"Git Workflow"),(0,o.kt)("p",null," We recommend using a simple flow based on following rules:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Use topic/feature branches, no direct commits on main."),(0,o.kt)("li",{parentName:"ul"},"Perform tests and code reviews before merges into main, not afterwards."),(0,o.kt)("li",{parentName:"ul"},"Every branch starts from main, and targets main."),(0,o.kt)("li",{parentName:"ul"},"Commit messages reflect intent.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Branches")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"main")," is the default branch and where releases are made off. This branch should be in clean/working conditions at all times. This branch is protected and can only be merged from Pull Requests for topic branches"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"topic")," branches are created for new features, fixes, or really any changes. E.g, ",(0,o.kt)("inlineCode",{parentName:"li"},"fix-task-trial2-stuck-button"))),(0,o.kt)("p",null,"This flow is sometimes referred to as ",(0,o.kt)("a",{parentName:"p",href:"https://docs.gitlab.com/ee/gitlab-basics/feature_branch_workflow.html"},"Feature Branch Workflow")),(0,o.kt)("h2",{id:"stay-up-to-date-with-honeycomb-template-repo"},"Stay up-to-date with Honeycomb template repo"),(0,o.kt)("p",null,"Honeycomb is an active project, and will be updated with new features over time. To bring changes from the honeycomb template repository to\nyour task, follow the following steps:"),(0,o.kt)("h3",{id:"add-honeycomb-as-an-additional-remote"},"Add honeycomb as an additional remote"),(0,o.kt)("p",null,"By default, your repository is configured to only sync with your remote, which typically is referred to as ",(0,o.kt)("inlineCode",{parentName:"p"},"origin"),". You can add Honeycomb as an additional remote as follows: "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git remote add honeycomb https://github.com/brown-ccv/honeycomb.git\n")),(0,o.kt)("p",null,"Adding a remote is a one time operation. At that point you can pull content from the ",(0,o.kt)("inlineCode",{parentName:"p"},"honeycomb")," remote as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git fetch --all\ngit merge honeycomb/main --allow-unrelated histories\n")),(0,o.kt)("p",null,"If there are any conflicts, you'll need to resolve those, then commit the merge:"),(0,o.kt)("p",null,"To merge:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'git commit -a -m "merge honeycomb latest"\n')))}u.isMDXComponent=!0},6793:function(e,t,n){t.Z=n.p+"assets/images/branch-417986578ff83e61cc4318715cab651d.png"},9004:function(e,t,n){t.Z=n.p+"assets/images/git-basics-8ba67841533472790a3ef4038aa47323.png"},8140:function(e,t,n){t.Z=n.p+"assets/images/git_branch-46e9d0f3d958474b86000c33dd2dac62.png"},7972:function(e,t,n){t.Z=n.p+"assets/images/git_clone-b9cbac3c2138e580410d5d92ac0c533a.png"},5868:function(e,t,n){t.Z=n.p+"assets/images/git_commit-c49d8fbfa8f3f8555a77776c607d32ed.png"},3997:function(e,t,n){t.Z=n.p+"assets/images/pull_request_1-5270b3148c70e4fb72dab791677df74b.png"},9817:function(e,t,n){t.Z=n.p+"assets/images/pull_request_info_1-2577687884f77e9065ba4f25a368d878.png"}}]);