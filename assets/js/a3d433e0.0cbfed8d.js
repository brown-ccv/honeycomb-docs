"use strict";(self.webpackChunkhoneycomb_docs=self.webpackChunkhoneycomb_docs||[]).push([[330],{5680:(e,n,r)=>{r.d(n,{xA:()=>c,yg:()=>g});var t=r(6540);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=t.createContext({}),p=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},c=function(e){var n=p(e.components);return t.createElement(l.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(r),m=o,g=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return r?t.createElement(g,a(a({ref:n},c),{},{components:r})):t.createElement(g,a({ref:n},c))}));function g(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[d]="string"==typeof e?e:o,a[1]=s;for(var p=2;p<i;p++)a[p]=r[p];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6016:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var t=r(8168),o=(r(6540),r(5680));const i={id:"troubleshooting",title:"Troubleshooting"},a=void 0,s={unversionedId:"troubleshooting",id:"version-2.x/troubleshooting",title:"Troubleshooting",description:"When developing electron apps there are two processes: main, and renderer.  In this case main corresponds to electron-starter.js and its console is wherever you called npm run dev or electron . from. renderer corresponds to the React App - this is everything else. The react app's console is in the electron/browser window and can be seen by using dev tools to inspect the window.  When running npm run dev, it should open by default.",source:"@site/versioned_docs/version-2.x/troubleshooting.md",sourceDirName:".",slug:"/troubleshooting",permalink:"/honeycomb-docs/docs/2.x/troubleshooting",draft:!1,editUrl:"https://github.com/brown-ccv/honeycomb-docs/edit/main/versioned_docs/version-2.x/troubleshooting.md",tags:[],version:"2.x",lastUpdatedAt:1719253619,formattedLastUpdatedAt:"Jun 24, 2024",frontMatter:{id:"troubleshooting",title:"Troubleshooting"},sidebar:"version-2.x/someSidebar",previous:{title:"Deploy online",permalink:"/honeycomb-docs/docs/2.x/online_integration"},next:{title:"NPM Scripts",permalink:"/honeycomb-docs/docs/2.x/npm_scripts"}},l={},p=[{value:"Potential Issues",id:"potential-issues",level:3},{value:"Package not found or other error related to <code>npm</code>",id:"package-not-found-or-other-error-related-to-npm",level:4},{value:"Inspecting Errors",id:"inspecting-errors",level:3}],c={toc:p},d="wrapper";function u(e){let{components:n,...r}=e;return(0,o.yg)(d,(0,t.A)({},c,r,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"When developing electron apps there are two processes: ",(0,o.yg)("inlineCode",{parentName:"p"},"main"),", and ",(0,o.yg)("inlineCode",{parentName:"p"},"renderer"),".  In this case ",(0,o.yg)("inlineCode",{parentName:"p"},"main")," corresponds to ",(0,o.yg)("inlineCode",{parentName:"p"},"electron-starter.js")," and its console is wherever you called ",(0,o.yg)("inlineCode",{parentName:"p"},"npm run dev")," or ",(0,o.yg)("inlineCode",{parentName:"p"},"electron .")," from. ",(0,o.yg)("inlineCode",{parentName:"p"},"renderer")," corresponds to the React App - this is everything else. The react app's console is in the electron/browser window and can be seen by using dev tools to inspect the window.  When running ",(0,o.yg)("inlineCode",{parentName:"p"},"npm run dev"),", it should open by default."),(0,o.yg)("h3",{id:"potential-issues"},"Potential Issues"),(0,o.yg)("h4",{id:"package-not-found-or-other-error-related-to-npm"},"Package not found or other error related to ",(0,o.yg)("inlineCode",{parentName:"h4"},"npm")),(0,o.yg)("p",null,"Try deleting your ",(0,o.yg)("inlineCode",{parentName:"p"},"node_modules")," folder and the ",(0,o.yg)("inlineCode",{parentName:"p"},"package-lock.json")," then running ",(0,o.yg)("inlineCode",{parentName:"p"},"npm install")," then ",(0,o.yg)("inlineCode",{parentName:"p"},"npm run rebuild"),"."),(0,o.yg)("h3",{id:"inspecting-errors"},"Inspecting Errors"),(0,o.yg)("p",null,"In case you want to find out where the error is coming from when running the app locally:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Try reviewing logs in the terminal"),(0,o.yg)("li",{parentName:"ul"},"Inspect element in your browser by openning your developer tools. For instance, in Chrome, this can be done via the menu View -> Developer or right-clicking and pressing inspect.")))}u.isMDXComponent=!0}}]);