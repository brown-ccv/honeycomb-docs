"use strict";(self.webpackChunkhoneycomb_docs=self.webpackChunkhoneycomb_docs||[]).push([[6643],{5680:(e,n,i)=>{i.d(n,{xA:()=>d,yg:()=>g});var t=i(6540);function a(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function r(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function l(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?r(Object(i),!0).forEach((function(n){a(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function o(e,n){if(null==e)return{};var i,t,a=function(e,n){if(null==e)return{};var i,t,a={},r=Object.keys(e);for(t=0;t<r.length;t++)i=r[t],n.indexOf(i)>=0||(a[i]=e[i]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)i=r[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var p=t.createContext({}),s=function(e){var n=t.useContext(p),i=n;return e&&(i="function"==typeof e?e(n):l(l({},n),e)),i},d=function(e){var n=s(e.components);return t.createElement(p.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},c=t.forwardRef((function(e,n){var i=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=s(i),c=a,g=m["".concat(p,".").concat(c)]||m[c]||u[c]||r;return i?t.createElement(g,l(l({ref:n},d),{},{components:i})):t.createElement(g,l({ref:n},d))}));function g(e,n){var i=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=i.length,l=new Array(r);l[0]=c;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[m]="string"==typeof e?e:a,l[1]=o;for(var s=2;s<r;s++)l[s]=i[s];return t.createElement.apply(null,l)}return t.createElement.apply(null,i)}c.displayName="MDXCreateElement"},5014:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var t=i(8168),a=(i(6540),i(5680));const r={id:"npm_scripts",slug:"/npm_scripts",title:"NPM Scripts",description:"Guide to using the npm scripts needed for Honeycomb"},l=void 0,o={unversionedId:"npm_scripts",id:"version-3.1.x/npm_scripts",title:"NPM Scripts",description:"Guide to using the npm scripts needed for Honeycomb",source:"@site/versioned_docs/version-3.1.x/npm_scripts.mdx",sourceDirName:".",slug:"/npm_scripts",permalink:"/docs/3.1.x/npm_scripts",draft:!1,editUrl:"https://github.com/brown-ccv/honeycomb-docs/edit/main/versioned_docs/version-3.1.x/npm_scripts.mdx",tags:[],version:"3.1.x",lastUpdatedAt:1720468390,formattedLastUpdatedAt:"Jul 8, 2024",frontMatter:{id:"npm_scripts",slug:"/npm_scripts",title:"NPM Scripts",description:"Guide to using the npm scripts needed for Honeycomb"},sidebar:"mySidebar",previous:{title:"Project Organization",permalink:"/docs/3.1.x/project_organization"},next:{title:"Environment Variables",permalink:"/docs/3.1.x/environment_variables"}},p={},s=[{value:"Start",id:"start",level:2},{value:"Firebase",id:"firebase",level:2},{value:"Dev",id:"dev",level:2},{value:"Build",id:"build",level:2},{value:"Package",id:"package",level:2},{value:"Miscellaneous",id:"miscellaneous",level:2}],d={toc:s},m="wrapper";function u(e){let{components:n,...i}=e;return(0,a.yg)(m,(0,t.A)({},d,i,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"Node package manager (NPM) ships with functionality to combine common shell commands into custom scripts. These scripts are defined in ",(0,a.yg)("inlineCode",{parentName:"p"},"package.json"),". All of the commands needed to develop, build, and deploy Honeycomb are written out as scripts."),(0,a.yg)("p",null,"Additional scripts can be created if desired but we generally recommend against changing or deleting the scripts Honeycomb ships with."),(0,a.yg)("p",null,"Scripts are run using the following terminal command:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"npm run <script>\n")),(0,a.yg)("h2",{id:"start"},"Start"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"electron")," starts an electron process with the built application."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"electron-dev")," starts an electron process with the current code.",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Note that the script waits for http://localhost:3000 to be available before launching the electron process."))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"start")," runs the app in development mode and does NOT open a browser. This makes working with electron easier as it creates its own browser for development."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"start:browser")," runs the app in development mode and automatically opens a new browser tab. It uses your system's default browser. The page will reload if you make edits.")),(0,a.yg)("h2",{id:"firebase"},"Firebase"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"firebase:emulators:start")," starts the Firebase emulators with the data found in ",(0,a.yg)("inlineCode",{parentName:"li"},"emulator_data/")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"firebase:emulators:save")," saves the current state of the Firebase emulators into ",(0,a.yg)("inlineCode",{parentName:"li"},"emulator_data/"),(0,a.yg)("admonition",{parentName:"li",type:"caution"},(0,a.yg)("p",{parentName:"admonition"},"There's no way to revert to what used to be in `emulator_data/ once it's overwritten!"))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"firebase:download")," runs the ",(0,a.yg)("inlineCode",{parentName:"li"},"firebase-download-script.js")," script, saving certain data in Firebase to your local machine.")),(0,a.yg)("h2",{id:"dev"},"Dev"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"npm run dev")," runs the task in development mode on Electron. It executes ",(0,a.yg)("inlineCode",{parentName:"p"},"npm start")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"npm run electron-dev")," concurrently."),(0,a.yg)("p",null,"Note that this is a base script that other scripts build on top of - you should always run one of the scripts below while developing your task."),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"dev:home")," executes ",(0,a.yg)("inlineCode",{parentName:"li"},"npm run dev")," with equipment disabled (",(0,a.yg)("inlineCode",{parentName:"li"},"env/.env.home"),")"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"dev:home:video")," executes ",(0,a.yg)("inlineCode",{parentName:"li"},"npm run dev")," with equipment disabled (",(0,a.yg)("inlineCode",{parentName:"li"},"env/.env.home"),") and video enabled (",(0,a.yg)("inlineCode",{parentName:"li"},"env/.env.video"),")"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"dev:clinic")," executes ",(0,a.yg)("inlineCode",{parentName:"li"},"npm run dev")," with equipment enabled (",(0,a.yg)("inlineCode",{parentName:"li"},"env/.env.clinic"),")"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"dev:clinic:video")," executes ",(0,a.yg)("inlineCode",{parentName:"li"},"npm run dev")," with equipment enabled (",(0,a.yg)("inlineCode",{parentName:"li"},"env/.env.clinic"),") and video enabled (",(0,a.yg)("inlineCode",{parentName:"li"},"env/.env.video"),")"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"dev:firebase")," executes ",(0,a.yg)("inlineCode",{parentName:"li"},"npm run start:browser")," with Firebase enabled (",(0,a.yg)("inlineCode",{parentName:"li"},"env/.env.firebase"),")",(0,a.yg)("admonition",{parentName:"li",type:"info"},(0,a.yg)("p",{parentName:"admonition"},(0,a.yg)("inlineCode",{parentName:"p"},"firebase:emulators:start")," must be run in its own terminal in order for ",(0,a.yg)("inlineCode",{parentName:"p"},"npm run firebase:dev")," to work")))),(0,a.yg)("h2",{id:"build"},"Build"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"npm run build")," creates a production build of the app in the ",(0,a.yg)("inlineCode",{parentName:"p"},"build/")," folder. Note that this is a base script that other scripts build on top of - you should always run one of the scripts below while developing your task."),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"dev:home")," executes ",(0,a.yg)("inlineCode",{parentName:"li"},"npm run build")," with equipment disabled (",(0,a.yg)("inlineCode",{parentName:"li"},"env/.env.home"),")"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"dev:home:video")," executes ",(0,a.yg)("inlineCode",{parentName:"li"},"npm run build")," with equipment disabled (",(0,a.yg)("inlineCode",{parentName:"li"},"env/.env.home"),") and video enabled (",(0,a.yg)("inlineCode",{parentName:"li"},"env/.env.video"),")"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"dev:clinic")," executes ",(0,a.yg)("inlineCode",{parentName:"li"},"npm run build")," with equipment enabled (",(0,a.yg)("inlineCode",{parentName:"li"},"env/.env.clinic"),")"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"dev:clinic:video")," executes ",(0,a.yg)("inlineCode",{parentName:"li"},"npm run build")," with equipment enabled (",(0,a.yg)("inlineCode",{parentName:"li"},"env/.env.clinic"),") and video enabled (",(0,a.yg)("inlineCode",{parentName:"li"},"env/.env.video"),")"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"dev:firebase")," executes ",(0,a.yg)("inlineCode",{parentName:"li"},"npm run build")," with Firebase enabled (",(0,a.yg)("inlineCode",{parentName:"li"},"env/.env.firebase"),")")),(0,a.yg)("h2",{id:"package"},"Package"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"npm run package:[platform]")," creates a standalone installer for the given platform using electron-forge. The installer is created in ",(0,a.yg)("inlineCode",{parentName:"p"},"out/"),". Note that the scripts build the app before creating the installers"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"npm run package:windows")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"npm run package:linux")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"npm run package:mac"))),(0,a.yg)("admonition",{type:"note"},(0,a.yg)("p",{parentName:"admonition"},"Packaging for windows on a non-windows machine requires ",(0,a.yg)("inlineCode",{parentName:"p"},"mono")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"wine")," to be installed.")),(0,a.yg)("h2",{id:"miscellaneous"},"Miscellaneous"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"commit")," runs ",(0,a.yg)("a",{parentName:"li",href:"https://commitizen-tools.github.io/commitizen/"},"commitizen")," in the console. It is useful for ensuring your Git commit messages are easy to follow."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"lint")," uses ",(0,a.yg)("a",{parentName:"li",href:"https://eslint.org/"},"Eslint")," to find problems in the code"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"format")," uses ",(0,a.yg)("a",{parentName:"li",href:"https://eslint.org/"},"Eslint")," to find and fix problems in the code that it can automatically"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"test")," launches the test runner in the interactive watch mode. See ",(0,a.yg)("a",{parentName:"li",href:"https://facebook.github.io/create-react-app/docs/running-tests"},"running tests")," for more information.")))}u.isMDXComponent=!0}}]);