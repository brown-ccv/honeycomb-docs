"use strict";(self.webpackChunkhoneycomb=self.webpackChunkhoneycomb||[]).push([[9292],{5680:(e,t,a)=>{a.d(t,{xA:()=>c,yg:()=>y});var n=a(6540);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(a),u=i,y=d["".concat(l,".").concat(u)]||d[u]||g[u]||o;return a?n.createElement(y,r(r({ref:t},c),{},{components:a})):n.createElement(y,r({ref:t},c))}));function y(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=a.length,r=new Array(o);r[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:i,r[1]=s;for(var p=2;p<o;p++)r[p]=a[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},891:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>b,frontMatter:()=>c,metadata:()=>g,toc:()=>y});var n=a(8168),i=(a(6540),a(5680));const o=a.p+"assets/images/firebase-console-settings-0a6f9d645eb45de659a7b4b784467625.png",r=a.p+"assets/images/firebase-web-credentials-2fe52b2547f94448997f6d311c76412f.png",s=a.p+"assets/images/firestore-create-study-1e75d836c67200b199878dcf4772fe50.png",l=a.p+"assets/images/firestore-example-study-8c600c7203ca68515ab663645af36874.png",p=a.p+"assets/images/firebase-actions-e13d5d73602640c80b12e924ea7843b6.png",c={id:"firebase",slug:"/firebase",title:"Firebase",description:"Guide for connecting Honeycomb to a Firebase project"},d=void 0,g={unversionedId:"firebase",id:"version-3.1.x/firebase",title:"Firebase",description:"Guide for connecting Honeycomb to a Firebase project",source:"@site/versioned_docs/version-3.1.x/firebase.mdx",sourceDirName:".",slug:"/firebase",permalink:"/honeycomb-docs/docs/3.1.x/firebase",draft:!1,editUrl:"https://github.com/brown-ccv/honeycomb-docs/edit/main/versioned_docs/version-3.1.x/firebase.mdx",tags:[],version:"3.1.x",lastUpdatedAt:1711378169,formattedLastUpdatedAt:"Mar 25, 2024",frontMatter:{id:"firebase",slug:"/firebase",title:"Firebase",description:"Guide for connecting Honeycomb to a Firebase project"},sidebar:"mySidebar",previous:{title:"Set up event triggers",permalink:"/honeycomb-docs/docs/3.1.x/event_triggers"},next:{title:"Deploy online",permalink:"/honeycomb-docs/docs/3.1.x/deploy_online"}},u={},y=[{value:"Setting up Firebase",id:"setting-up-firebase",level:2},{value:"Adding Products",id:"adding-products",level:3},{value:"Installing the Command Line Interface",id:"installing-the-command-line-interface",level:3},{value:"Connecting Your Firebase Project",id:"connecting-your-firebase-project",level:3},{value:"Registering Studies",id:"registering-studies",level:2},{value:"Developing With Firebase",id:"developing-with-firebase",level:2},{value:"Deploying on Firebase",id:"deploying-on-firebase",level:2},{value:"Downloading Data",id:"downloading-data",level:2},{value:"Setting up a Service Account",id:"setting-up-a-service-account",level:3},{value:"Using the Download Script",id:"using-the-download-script",level:3},{value:"sessionNumber",id:"sessionnumber",level:4},{value:"outputRoot",id:"outputroot",level:4},{value:"Further Reading",id:"further-reading",level:2},{value:"Security Rules",id:"security-rules",level:3}],m={toc:y},h="wrapper";function b(e){let{components:t,...a}=e;return(0,i.yg)(h,(0,n.A)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("p",null,"Honeycomb comes with methods and configurations to deploy tasks with ",(0,i.yg)("a",{parentName:"p",href:"https://firebase.google.com/"},"Firebase"),". These tools make it possible to reach a wider audience by hosting your task online."),(0,i.yg)("h2",{id:"setting-up-firebase"},"Setting up Firebase"),(0,i.yg)("admonition",{type:"info"},(0,i.yg)("p",{parentName:"admonition"},"Please have your PI contact ",(0,i.yg)("a",{parentName:"p",href:"mailto:support@ccv.brown.edu"},"support@ccv.brown.edu")," to create a Firebase project for your Honeycomb task before beginning.")),(0,i.yg)("h3",{id:"adding-products"},"Adding Products"),(0,i.yg)("p",null,"First we'll configure ",(0,i.yg)("a",{parentName:"p",href:"https://firebase.google.com/docs/hosting"},"Firebase Hosting")," and ",(0,i.yg)("a",{parentName:"p",href:"https://firebase.google.com/docs/firestore"},"Cloud Firestore")," on your project."),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"Log in to Firebase with your Google account on the ",(0,i.yg)("a",{parentName:"p",href:"https://console.firebase.google.com/"},"Firebase console"),".")),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"Navigate to your project from the console")),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"Register a new web app to your project (",(0,i.yg)("a",{parentName:"p",href:"https://firebase.google.com/docs/web/setup#register-app"},"Register your app"),")"),(0,i.yg)("admonition",{parentName:"li",type:"note"},(0,i.yg)("p",{parentName:"admonition"},"We recommend giving your web app the same name as your task's repository"))),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"Add Firestore Database to your project (",(0,i.yg)("a",{parentName:"p",href:"https://firebase.google.com/docs/firestore/quickstart#create"},"Create a Cloud Firestore database"),")"),(0,i.yg)("admonition",{parentName:"li",type:"note"},(0,i.yg)("p",{parentName:"admonition"},"Chose ",(0,i.yg)("inlineCode",{parentName:"p"},"production mode"),' for the starting mode and the default "Cloud Firestore Location"')))),(0,i.yg)("p",null,"The Firebase project is now fully set up! Now we'll connect your task to that project from your computer."),(0,i.yg)("h3",{id:"installing-the-command-line-interface"},"Installing the Command Line Interface"),(0,i.yg)("p",null,"The Firebase CLI can be installed with the node package manager just like the rest of Honeycomb's dependencies. Be sure to log in with same account you used when logging into the console!"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-shell",metastring:'title="Install the Firebase CLI"',title:'"Install',the:!0,Firebase:!0,'CLI"':!0},"npm install -g firebase-tools\n")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-shell",metastring:'title="Login to Firebase"',title:'"Login',to:!0,'Firebase"':!0},"firebase login\n")),(0,i.yg)("p",null,(0,i.yg)("em",{parentName:"p"},'A "command not found" error usually indicates ',(0,i.yg)("inlineCode",{parentName:"em"},"firebase-tools")," has not been installed correctly")),(0,i.yg)("h3",{id:"connecting-your-firebase-project"},"Connecting Your Firebase Project"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"Change the default project name of your task in ",(0,i.yg)("inlineCode",{parentName:"li"},".firebaserc"))),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-json",metastring:'title=".firebaserc" showLineNumbers',title:'".firebaserc"',showLineNumbers:!0},'{\n  "projects": {\n    "default": "<your project name>"\n  }\n}\n')),(0,i.yg)("ol",{start:2},(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"Copy the web app credentials from the Firebase console to the corresponding variables in ",(0,i.yg)("inlineCode",{parentName:"p"},".env.firebase")),(0,i.yg)("ol",{parentName:"li"},(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"Return to your project on the ",(0,i.yg)("a",{parentName:"p",href:"https://console.firebase.google.com/"},"Firebase console"),".")),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"Navigate to your project setting"),(0,i.yg)("img",{src:o,alt:"Firebase project settings"})),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"Scroll down and copy the auto-generated values from the Firebase console to the corresponding variables in the ",(0,i.yg)("inlineCode",{parentName:"p"},".env.firebase")," file in the ",(0,i.yg)("inlineCode",{parentName:"p"},"env")," folder of your Honeycomb task repo"),(0,i.yg)("img",{src:r,alt:"Firebase web credentials"}),(0,i.yg)("br",null),(0,i.yg)("br",null),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-shell",metastring:'title="env/.env.firebase"',title:'"env/.env.firebase"'},'REACT_APP_FIREBASE="true"\nREACT_APP_apiKey=\nREACT_APP_authDomain=\nREACT_APP_projectId=\nREACT_APP_storageBucket=\nREACT_APP_messagingSenderId=\nREACT_APP_appId=\n')),(0,i.yg)("p",{parentName:"li"},(0,i.yg)("em",{parentName:"p"},"Additional variables may be present in the console, they do not need to be copied."))))),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"Deploy the default ",(0,i.yg)("a",{parentName:"p",href:"https://firebase.google.com/docs/firestore/security/get-started"},"Firestore security rules")))),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-shell",metastring:'title="Deploy Firestore rules"',title:'"Deploy',Firestore:!0,'rules"':!0},"firebase deploy --only firestore:rules\n")),(0,i.yg)("p",null,"Your task is now connected to an initialized Firebase project!"),(0,i.yg)("h2",{id:"registering-studies"},"Registering Studies"),(0,i.yg)("admonition",{type:"caution"},(0,i.yg)("p",{parentName:"admonition"},"This step must be followed ",(0,i.yg)("strong",{parentName:"p"},"exactly"),". See ",(0,i.yg)("a",{parentName:"p",href:"#security-rules"},"Security Rules")," for more information.")),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"Navigate to your Firestore Database in the ",(0,i.yg)("a",{parentName:"li",href:"https://console.firebase.google.com/"},"console"),"."),(0,i.yg)("li",{parentName:"ol"},'Click "Start collection"'),(0,i.yg)("li",{parentName:"ol"},"Enter ",(0,i.yg)("inlineCode",{parentName:"li"},"registered_studies"),' for the collection id and click "next"'),(0,i.yg)("li",{parentName:"ol"},"Enter the id of your study for the document id"),(0,i.yg)("li",{parentName:"ol"},"Add a field named ",(0,i.yg)("inlineCode",{parentName:"li"},"registered_participants"),' with the type "array"'),(0,i.yg)("li",{parentName:"ol"},"Add the id of each study participant as a string inside the array")),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:s,alt:"Create a study",style:{maxHeight:"600px"}})),(0,i.yg)("br",null),(0,i.yg)("p",null,"The study should like this when you're finished:"),(0,i.yg)("img",{src:l,alt:"Example study"}),(0,i.yg)("br",null),(0,i.yg)("br",null),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Additional studies must be created inside the ",(0,i.yg)("inlineCode",{parentName:"strong"},"registered_studies")," collection")),(0,i.yg)("h2",{id:"developing-with-firebase"},"Developing With Firebase"),(0,i.yg)("p",null,(0,i.yg)("em",{parentName:"p"},"Two terminal windows must be used while developing for Firebase. Instructions splitting terminals in VSCode can be found ",(0,i.yg)("a",{parentName:"em",href:"https://code.visualstudio.com/docs/terminal/basics#_groups-split-panes"},"here"),".")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-shell",metastring:'title="Run Honeycomb with Firebase Enabled"',title:'"Run',Honeycomb:!0,with:!0,Firebase:!0,'Enabled"':!0},"npm run dev:firebase\n")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-shell",metastring:'title="Start the Firebase Emulators"',title:'"Start',the:!0,Firebase:!0,'Emulators"':!0},"npm run firebase:emulators:start\n")),(0,i.yg)("p",null,"Honeycomb is now running in the browser and connected to data on an emulated instance of Firestore.\nThat data can be viewed at ",(0,i.yg)("a",{parentName:"p",href:"http://localhost:4000/firestore"},"http://localhost:4000/firestore"),"."),(0,i.yg)("admonition",{type:"info"},(0,i.yg)("p",{parentName:"admonition"},"Honeycomb populates the Firestore emulators with the study ",(0,i.yg)("inlineCode",{parentName:"p"},"s1")," and participant ",(0,i.yg)("inlineCode",{parentName:"p"},"p1"),".")),(0,i.yg)("h2",{id:"deploying-on-firebase"},"Deploying on Firebase"),(0,i.yg)("p",null,"Firebase deployments are handled automatically following ",(0,i.yg)("a",{parentName:"p",href:"ci"},"Continuous Integration Continuous Development")," practices using GitHub Actions. Here we will connect create custom actions that are connected to the task's Firebase project."),(0,i.yg)("p",null,"Execute the following command to begin initializing Firebase hosting via GitHub actions. Be sure to follow the instructions below as the prompts appear."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-shell",metastring:'title="Initialize Firebase hosting via Github actions"',title:'"Initialize',Firebase:!0,hosting:!0,via:!0,Github:!0,'actions"':!0},"firebase init hosting:github\n")),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"The window should log you in automatically. If not, follow the prompts to log in with the same account you used in the console."),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("inlineCode",{parentName:"li"},"<username>/<repository name>")," refers to the name of your repository in Github. Be sure it's typed correctly!"),(0,i.yg)("li",{parentName:"ol"},"Enter ",(0,i.yg)("inlineCode",{parentName:"li"},"y"),' for the prompt "Set up the workflow to run a build script before every deploy?"'),(0,i.yg)("li",{parentName:"ol"},"Enter ",(0,i.yg)("inlineCode",{parentName:"li"},"npm install && npm run build:firebase"),' for the prompt "What script should be run before every deploy?"'),(0,i.yg)("li",{parentName:"ol"},"Enter ",(0,i.yg)("inlineCode",{parentName:"li"},"y")," to overwrite the current workflow file"),(0,i.yg)("li",{parentName:"ol"},"Enter ",(0,i.yg)("inlineCode",{parentName:"li"},"y"),' for the prompt "Set up automatic deployment to your site\'s live channel when a PR is merged?"'),(0,i.yg)("li",{parentName:"ol"},"Enter ",(0,i.yg)("inlineCode",{parentName:"li"},"main"),' for the prompt "What is the name of the GitHub branch associated with your site\'s live channel?"'),(0,i.yg)("li",{parentName:"ol"},"Enter ",(0,i.yg)("inlineCode",{parentName:"li"},"y")," to overwrite the current workflow file")),(0,i.yg)("p",null,"Firebase will update the files ",(0,i.yg)("inlineCode",{parentName:"p"},"firebase-hosting-pull-request.yml")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"firebase-hosting-merge.yml")," inside the ",(0,i.yg)("inlineCode",{parentName:"p"},".github/workflows/")," directory. Ensure the correct run script is present in both files."),(0,i.yg)("img",{src:p,alt:"Github actions created by firebase"}),(0,i.yg)("h2",{id:"downloading-data"},"Downloading Data"),(0,i.yg)("p",null,"Honeycomb ships with a script for downloading data from Firebase onto a computer. A local service account must be created in order to use it."),(0,i.yg)("h3",{id:"setting-up-a-service-account"},"Setting up a Service Account"),(0,i.yg)("p",null,"Service accounts are accounts that are not attached to a human user. They authorize access to a Firebase project without someone physically logging in online. We use a service account to give the download script access to the Firestore database automatically."),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"Return to the project settings your project on the ",(0,i.yg)("a",{parentName:"p",href:"https://console.firebase.google.com/"},"Firebase console"),"."),(0,i.yg)("img",{src:o,alt:"Firebase project settings"})),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},'Click on the "Service accounts" tab')),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},'Near the bottom, click "Generate new Private key" and "Generate Key"')),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"Rename the key ",(0,i.yg)("inlineCode",{parentName:"p"},"firebase-service-account.json")," and move it to the root directory of your task. Be sure the file looks grayed out and is not picked up by git!"))),(0,i.yg)("admonition",{type:"danger"},(0,i.yg)("p",{parentName:"admonition"},"A service account has total administrative access to ts Firebase project. The file and keys inside should never be shared and ",(0,i.yg)("strong",{parentName:"p"},"never committed to GitHub."))),(0,i.yg)("h3",{id:"using-the-download-script"},"Using the Download Script"),(0,i.yg)("p",null,"Honeycomb comes with a download script. It will programmatically access Firestore to download the experiment data you choose"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash",metastring:'title="Script Usage"',title:'"Script','Usage"':!0},"npm run firebase:download -- <studyID> <participantID> [sessionNumber] [outputRoot]\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"studyID"),": The ID of a given study"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"participantID"),": The ID of a given participant on the ",(0,i.yg)("inlineCode",{parentName:"li"},"studyID")," study"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"sessionNumber"),": Optional number to select which session to download, defaults to the most recent session"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"outputRoot"),": Optional path to the folder where data should be saved, defaults to the current folder")),(0,i.yg)("p",null,"Running the script without ",(0,i.yg)("inlineCode",{parentName:"p"},"sessionNumber")," list all of the available sessions. For example:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"Found 3 sessions:\n  0: 2022-07-26T22:04:55.544Z\n  1: 2022-07-27T14:16:36.301Z\n  2: 2022-07-27T19:56:26.229Z\n")),(0,i.yg)("h4",{id:"sessionnumber"},"sessionNumber"),(0,i.yg)("p",null,"Adding a ",(0,i.yg)("inlineCode",{parentName:"p"},"sessionNumber")," will download that sessions data:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-shell",metastring:'title="Download data for session 2022-07-26T22:04:55.544Z"',title:'"Download',data:!0,for:!0,session:!0,'2022-07-26T22:04:55.544Z"':!0},"npm run firebase:download -- <studyID> <participantID> 0 [outputRoot]\n")),(0,i.yg)("h4",{id:"outputroot"},"outputRoot"),(0,i.yg)("p",null,"Session data is stored in the current directory by default. The folders and file name are chosen to avoid naming collisions: ",(0,i.yg)("inlineCode",{parentName:"p"},"./participant_responses/<studyID>/<participantID>/<sessionID>.json")),(0,i.yg)("p",null,"Adding an ",(0,i.yg)("inlineCode",{parentName:"p"},"outputRoot")," will download that data in a custom location:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-shell",metastring:'title="Download data for session 2022-07-26T22:04:55.544Z at /path/to/my/data"',title:'"Download',data:!0,for:!0,session:!0,"2022-07-26T22:04:55.544Z":!0,at:!0,'/path/to/my/data"':!0},"npm run firebase:download -- <studyID> <participantID> 0 /path/to/my/data\n")),(0,i.yg)("p",null,"This will result in data saved to ",(0,i.yg)("inlineCode",{parentName:"p"},"/path/to/my/data/participant_responses/<studyID>/<participantID>/<sessionID>.json")),(0,i.yg)("h2",{id:"further-reading"},"Further Reading"),(0,i.yg)("p",null,(0,i.yg)("em",{parentName:"p"},"The ",(0,i.yg)("a",{parentName:"em",href:"https://firebase.google.com/docs/emulator-suite"},"Firebase Documentation")," details its Emulator Suite in much greater detail.")),(0,i.yg)("h3",{id:"security-rules"},"Security Rules"),(0,i.yg)("p",null,"Honeycomb uses security rules to authenticate participants and studies for each task. By default participants must be registered to each study in order to complete the task."),(0,i.yg)("p",null,"Firestore rules are defined in the ",(0,i.yg)("inlineCode",{parentName:"p"},"firestore.rules")," file in the home directory. Note the highlighted lines:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-firestore-security-rules",metastring:'title="firestore.rules" showLineNumbers',title:'"firestore.rules"',showLineNumbers:!0},"rules_version = '2';\nservice cloud.firestore {\n  //highlight-start\n  match /databases/{database}/documents {\n      match /participant_responses/{studyID}/participants/{participantID} {\n        allow create, read:\n        if participantID in get(/databases/$(database)/documents/registered_studies/$(studyID)).data.registered_participants;\n  //highlight-end\n        // ...\n      }\n    }\n}\n")),(0,i.yg)("p",null,"Lines 3 and 4 indicate that Honeycomb attempts to connect to a document at ",(0,i.yg)("inlineCode",{parentName:"p"},"/databases/{database}/documents/participant_responses/{studyID}/participants/{participantID}")," where ",(0,i.yg)("inlineCode",{parentName:"p"},"studyID")," is a given study and ",(0,i.yg)("inlineCode",{parentName:"p"},"participantID")," is a given participant within that study."),(0,i.yg)("p",null,"Line 6 defines our rule - it must pass for Honeycomb to connect to the document. ",(0,i.yg)("inlineCode",{parentName:"p"},"participantID")," must be found in an array called ",(0,i.yg)("inlineCode",{parentName:"p"},"registered_participants")," inside of a document at ",(0,i.yg)("inlineCode",{parentName:"p"},"/databases/{database}/documents/registered_studies/{studyID}"),"."),(0,i.yg)("p",null,"Line 5 indicates how Honeycomb can interact with that document. Note that Honeycomb cannot update or delete data! You must manually make these changes from the Firestore console."),(0,i.yg)("admonition",{type:"danger"},(0,i.yg)("p",{parentName:"admonition"},"Firestore rules must define every match pattern in your project. Attempting to connect anywhere other than ",(0,i.yg)("inlineCode",{parentName:"p"},"/participant_responses/{studyID}/participants/{participantID}")," will be automatically denied even if you add other collections to your database. This is why ",(0,i.yg)("inlineCode",{parentName:"p"},"firestore.rules")," contains additional nested rules - these should be left alone.")))}b.isMDXComponent=!0}}]);