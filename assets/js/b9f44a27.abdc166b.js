"use strict";(self.webpackChunkhoneycomb=self.webpackChunkhoneycomb||[]).push([[3906],{5680:(e,t,n)=>{n.d(t,{xA:()=>d,yg:()=>c});var i=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},y=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=p(n),y=a,c=m["".concat(s,".").concat(y)]||m[y]||u[y]||o;return n?i.createElement(c,r(r({ref:t},d),{},{components:n})):i.createElement(c,r({ref:t},d))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=y;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:a,r[1]=l;for(var p=2;p<o;p++)r[p]=n[p];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}y.displayName="MDXCreateElement"},7978:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var i=n(8168),a=(n(6540),n(5680));const o={id:"directory_structure",slug:"/directory_structure",title:"Directory Structure",description:"Overview of Honeycomb's directory structure"},r=void 0,l={unversionedId:"project_organization/directory_structure",id:"project_organization/directory_structure",title:"Directory Structure",description:"Overview of Honeycomb's directory structure",source:"@site/docs/project_organization/directory_structure.mdx",sourceDirName:"project_organization",slug:"/directory_structure",permalink:"/honeycomb-docs/docs/directory_structure",draft:!1,editUrl:"https://github.com/brown-ccv/honeycomb-docs/edit/main/docs/project_organization/directory_structure.mdx",tags:[],version:"current",lastUpdatedAt:1711378169,formattedLastUpdatedAt:"Mar 25, 2024",frontMatter:{id:"directory_structure",slug:"/directory_structure",title:"Directory Structure",description:"Overview of Honeycomb's directory structure"},sidebar:"mySidebar",previous:{title:"Prerequisites",permalink:"/honeycomb-docs/docs/prerequisites"},next:{title:"NPM Scripts",permalink:"/honeycomb-docs/docs/npm_scripts"}},s={},p=[{value:"assets/",id:"assets",level:2},{value:"build/",id:"build",level:2},{value:"emulator_data/",id:"emulator_data",level:2},{value:"env/",id:"env",level:2},{value:"node_modules/",id:"node_modules",level:2},{value:"psiturkit/",id:"psiturkit",level:2},{value:"public/",id:"public",level:2},{value:"assets/",id:"assets-1",level:3},{value:"electron/",id:"electron",level:3},{value:"lib/",id:"lib",level:3},{value:"src/",id:"src",level:2},{value:"App/",id:"app",level:3},{value:"components/",id:"components",level:4},{value:"deployments/",id:"deployments",level:4},{value:"config/",id:"config",level:3},{value:"experiment/",id:"experiment",level:3},{value:"procedures/",id:"procedures",level:4},{value:"trials/",id:"trials",level:4},{value:"lib/",id:"lib-1",level:3},{value:"markup/",id:"markup",level:4},{value:"Other Folders/Files",id:"other-foldersfiles",level:2},{value:"Firebase Files",id:"firebase-files",level:3},{value:"Git Files",id:"git-files",level:3},{value:"Eslint Files",id:"eslint-files",level:3},{value:"Prettier Files",id:"prettier-files",level:3}],d={toc:p},m="wrapper";function u(e){let{components:t,...n}=e;return(0,a.yg)(m,(0,i.A)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"This project directory is organized to be modular and composable. In general, files and functions should be relatively small and self-contained, global scope should not be used, and only the pieces of code needed for any given file should be imported."),(0,a.yg)("h2",{id:"assets"},"assets/"),(0,a.yg)("p",null,"This folder contains static files that are used by the application. Honeycomb uses a few images as icons for the installed applications."),(0,a.yg)("admonition",{type:"caution"},(0,a.yg)("p",{parentName:"admonition"},"Assets that pertain to your specific task should be added to the ",(0,a.yg)("a",{parentName:"p",href:"#assets-1"},"public/assets/")," folder, not here!")),(0,a.yg)("h2",{id:"build"},"build/"),(0,a.yg)("p",null,"The ",(0,a.yg)("a",{parentName:"p",href:"npm_scripts#npm-build"},"build scripts")," automatically create a ",(0,a.yg)("inlineCode",{parentName:"p"},"build")," folder at the root of the repository and update it on subsequent builds."),(0,a.yg)("admonition",{type:"caution"},(0,a.yg)("p",{parentName:"admonition"},(0,a.yg)("inlineCode",{parentName:"p"},"build/")," should be left alone! It is in Honeycomb's ",(0,a.yg)("inlineCode",{parentName:"p"},".gitignore")," and should never be added to git.")),(0,a.yg)("h2",{id:"emulator_data"},"emulator_data/"),(0,a.yg)("p",null,"This folder contains starter data for the Firebase Emulators to use while developing locally. The ",(0,a.yg)("a",{parentName:"p",href:"npm_scripts#firebase"},"Firebase Scripts")," detail how to use this data."),(0,a.yg)("admonition",{type:"caution"},(0,a.yg)("p",{parentName:"admonition"},(0,a.yg)("inlineCode",{parentName:"p"},"emulator_data/")," is written to when running ",(0,a.yg)("inlineCode",{parentName:"p"},"npm run firebase:emulators:save")," and should never be edited.")),(0,a.yg)("h2",{id:"env"},"env/"),(0,a.yg)("p",null,"This folder contains different files used to pass environment variables (settings) into Honeycomb. Honeycomb starts with presets for common use cases and is explained in greater detail in the ",(0,a.yg)("a",{parentName:"p",href:"environment_variables"},"Environment Variables")," section."),(0,a.yg)("h2",{id:"node_modules"},"node_modules/"),(0,a.yg)("admonition",{type:"caution"},(0,a.yg)("p",{parentName:"admonition"},(0,a.yg)("inlineCode",{parentName:"p"},"node_modules/")," is written to when running ",(0,a.yg)("inlineCode",{parentName:"p"},"npm install")," and should never be edited. It is in Honeycomb's ",(0,a.yg)("inlineCode",{parentName:"p"},".gitignore")," and should never be added to git.")),(0,a.yg)("h2",{id:"psiturkit"},"psiturkit/"),(0,a.yg)("p",null,"The file ",(0,a.yg)("inlineCode",{parentName:"p"},"psiturk-it")," inside ",(0,a.yg)("inlineCode",{parentName:"p"},"psiturkit/")," is a bash script used to instal PsiTurk locally - see ",(0,a.yg)("a",{parentName:"p",href:"psiturk#build-instructions"},"PsiTurk")," for more information."),(0,a.yg)("admonition",{type:"caution"},(0,a.yg)("p",{parentName:"admonition"},"This folder involves a Honeycomb deployment. The files do not need to be edited.")),(0,a.yg)("h2",{id:"public"},"public/"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"public")," directory contains files that are used as assets in the built app."),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"index.html")," is the entry point of the website",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Changing ",(0,a.yg)("inlineCode",{parentName:"li"},"<title>Honeycomb</title>")," will update the text in the browser tab!"))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"favicon.ico")," is the small (16x16px) icon you can see in the browser tab"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"manifest.json")," contains metadata about the web app")),(0,a.yg)("admonition",{type:"caution"},(0,a.yg)("p",{parentName:"admonition"},(0,a.yg)("inlineCode",{parentName:"p"},"manifest.json")," involves project metadata and does not need to be edited.")),(0,a.yg)("h3",{id:"assets-1"},"assets/"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"public/assets/")," directory contains all of the audio, images, and videos needed to run your task."),(0,a.yg)("h3",{id:"electron"},"electron/"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"public/electron/")," directory contains the files needed to run Honeycomb as an Electron app."),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"main.js")," sets up Electron itself"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"preload.js")," sets up the communication between the main and renderer processes.")),(0,a.yg)("admonition",{type:"caution"},(0,a.yg)("p",{parentName:"admonition"},"This folder involves a Honeycomb deployment, the files do not need to be edited.")),(0,a.yg)("h3",{id:"lib"},"lib/"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"public/lib/")," directory contains the files PsiTurk needs to run. Note that ",(0,a.yg)("inlineCode",{parentName:"p"},"index.html")," references these files inside the ",(0,a.yg)("inlineCode",{parentName:"p"},"<script>")," tags."),(0,a.yg)("admonition",{type:"caution"},(0,a.yg)("p",{parentName:"admonition"},"This folder involves dependencies for a Honeycomb deployment, the files should not be edited.")),(0,a.yg)("h2",{id:"src"},"src/"),(0,a.yg)("p",null,"This folder contains the source code for the Honeycomb application."),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"index.js")," is the entry point for React in our application. Note that the id 'root' corresponds with a tag in ",(0,a.yg)("inlineCode",{parentName:"li"},"public/index.html"),":",(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-html"},'<div id="root"></div>\n')),(0,a.yg)("admonition",{parentName:"li",type:"caution"},(0,a.yg)("p",{parentName:"admonition"},(0,a.yg)("inlineCode",{parentName:"p"},"index.js")," runs Honeycomb itself and should not be edited.")))),(0,a.yg)("h3",{id:"app"},"App/"),(0,a.yg)("p",null,"Files relating to the React application."),(0,a.yg)("admonition",{type:"caution"},(0,a.yg)("p",{parentName:"admonition"},"This folder holds the code that runs the jsPsych task, the files do not need to be edited.")),(0,a.yg)("h4",{id:"components"},"components/"),(0,a.yg)("p",null,"The React components that make up Honeycomb are located here."),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"App.jsx")," initializes and maintains the state of the application."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"Error.jsx")," displays a small error message. It is rendered when the App.jsx detects an issue in state."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"JsPsychExperiment.jsx")," initializes the jsPsych experiment."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"Login.jsx")," handles user authentication based on the environment variables passed to Honeycomb.")),(0,a.yg)("h4",{id:"deployments"},"deployments/"),(0,a.yg)("p",null,"Custom code used by the various deployments such as Firebase."),(0,a.yg)("admonition",{type:"caution"},(0,a.yg)("p",{parentName:"admonition"},"This folder involves Honeycomb deployments, the files do not need to be edited.")),(0,a.yg)("h3",{id:"config"},"config/"),(0,a.yg)("p",null,"Each file in the config directory contains settings for a different part of the task."),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"language.json")," contains the language used in your task. This file allows for easy internationalization of the task (e.g. English and Spanish) and mturk-specific language. Common phrases can be written once and re-used throughout the task.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"main.js")," contains the global settings (e.g., whether Honeycomb is running online or in the clinic) passed from env variables and logic for loading the appropriate files.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"settings.json")," contains the settings for your task. Usage of the config file allows for easy updating of task settings. Common settings can be written once and re-used throughout the task.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"trigger.js")," contains equipment-related settings for a trigger box. The ",(0,a.yg)("inlineCode",{parentName:"p"},"eventCodes")," are especially important for marking the types of given trials."))),(0,a.yg)("h3",{id:"experiment"},"experiment/"),(0,a.yg)("admonition",{type:"tip"},(0,a.yg)("p",{parentName:"admonition"},"This is where you'll spend most of your time while developing your task!")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"index.js")," contains the outermost logic for running the experiment. It loads experiment's styling and exports the main timeline and options for the experiment.",(0,a.yg)("admonition",{parentName:"li",type:"caution"},(0,a.yg)("p",{parentName:"admonition"},"The experiment will not run correctly if the names ",(0,a.yg)("inlineCode",{parentName:"p"},"jsPsychOptions")," or ",(0,a.yg)("inlineCode",{parentName:"p"},"buildTimeline")," are changed."))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"honeycomb.js")," contains the options and timeline for the ",(0,a.yg)("a",{parentName:"li",href:"https://www.jspsych.org/7.3/tutorials/rt-task/"},"jsPsych tutorial's"),' "Simple React Time Task". It serves as an example for the experiment timeline for your task.',(0,a.yg)("admonition",{parentName:"li",type:"tip"},(0,a.yg)("p",{parentName:"admonition"},"This is just an example experiment! Be sure to write your experiment in its own file.\n{/",(0,a.yg)("em",{parentName:"p"}," TODO: Link to this in the quick_start guide once it's ready "),"/}")))),(0,a.yg)("h4",{id:"procedures"},"procedures/"),(0,a.yg)("p",null,"A procedure is a tested timeline of trials in jsPsych. Common parameters can be used across trials, and the trials within a procedure can be ordered and repeated as desired. Check out the ",(0,a.yg)("a",{parentName:"p",href:"https://www.jspsych.org/7.3/overview/timeline/#timeline-variables"},"JsPsych documentation")," for more information on creating a custom procedure."),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"startProcedure.js")," contains the procedure for the start of the experiment. It uses the environment and task settings from ",(0,a.yg)("a",{parentName:"li",href:"#config"},"config.json")," to create a nested timeline that correctly starts the experiment."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"honeycombProcedure.js")," contains the procedure for the Honeycomb task. It displays a fixation dot and presents the stimulus of the example task.",(0,a.yg)("admonition",{parentName:"li",type:"tip"},(0,a.yg)("p",{parentName:"admonition"},"This is just an example procedure! Be sure to write your procedures in their own files."))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"endProcedure.js")," contains the procedure for the end of the experiment. It uses the environment and task settings from ",(0,a.yg)("a",{parentName:"li",href:"#config"},"config.json")," to create a nested timeline that correctly end the experiment.")),(0,a.yg)("h4",{id:"trials"},"trials/"),(0,a.yg)("p",null,"A ",(0,a.yg)("a",{parentName:"p",href:"https://www.jspsych.org/7.3/overview/timeline/#a-single-trial"},"trial")," is the base unit of an experiment. These trials are ordered into procedures and timelines to create the task itself."),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"adjustVolume.js")," prompts the user to adjust the volume on their tablet.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"camera.js")," contains trials for beginning and ending a camera recording.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"conclusion.js")," displays a message to the user indicating that the experiment has concluded.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"fixation.js")," displays a fixation dot in the center of the screen. It contains additional logic for flashing a photodiode spot and emitting an event code based on the environment settings.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"fullscreen.js")," contains trials for entering and exiting fullscreen mode.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"holdUpMarker.js")," prompts the user to connect their event marker and hold it up to the camera.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"honeycombTrials.js")," contains the individual trials used in the Honeycomb task. These trials are imported into ",(0,a.yg)("inlineCode",{parentName:"p"},"experiment/procedures/honeycombProcedure.js")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"experiment/honeycomb.js"),"."),(0,a.yg)("admonition",{parentName:"li",type:"tip"},(0,a.yg)("p",{parentName:"admonition"},"These trials are for the example experiment! Be sure to write trials pertaining to your task in their own file(s)."))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"introduction.js")," displays a message to the user welcoming them to the experiment. They must click on a button to continue.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"name.js")," displays the name of the task to the user.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"startCode.js")," emits a start code to a photodiode spot and audible beep.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"survey.js")," contains trials pertaining to a survey/quiz for the user to complete."))),(0,a.yg)("h3",{id:"lib-1"},"lib/"),(0,a.yg)("p",null,"A library of utility and markup functions are located here. This allows for functions and html to be re-used wherever needed."),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"utils.js")," contains utility functions that can be used across a variety of trials. Be sure to look for functions you might be able to use in your task!")),(0,a.yg)("h4",{id:"markup"},"markup/"),(0,a.yg)("p",null,"Markup files contain HTML templates used throughout the task."),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"photodiode.js")," contains the markup for the photodiode box and spot displayed in the bottom right corner of the screen"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"tags.js")," contains functions for wrapping ",(0,a.yg)("a",{parentName:"li",href:"#config-1"},"language")," in common html tags. You should always wrap your language in a tag to ensure it is displayed correctly.",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"For example: ",(0,a.yg)("inlineCode",{parentName:"li"},"p('Hello World')")," will return ",(0,a.yg)("inlineCode",{parentName:"li"},"<p>Hello World</p>"),".")))),(0,a.yg)("admonition",{type:"tip"},(0,a.yg)("p",{parentName:"admonition"},"The ",(0,a.yg)("inlineCode",{parentName:"p"},"tag")," function inside ",(0,a.yg)("inlineCode",{parentName:"p"},"tags.js")," can be used to wrap language in any html tag you need.")),(0,a.yg)("h2",{id:"other-foldersfiles"},"Other Folders/Files"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},".nvmrc")," determines which version of node that Honeycomb is designed to be run on.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},".github/workflows/")," contains .yaml files used for ",(0,a.yg)("a",{parentName:"p",href:"ci_cd"},"CI/CD")," with GitHub Actions.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"package.json")," contains metadata about your project, a list of the dependencies needed for the project, and scripts to run tasks related to your task. The ",(0,a.yg)("a",{parentName:"p",href:"quick_start#4-change-name-and-description"},"Quick Start")," lists which metadata should be changed.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"cli.mjs")," is the script used to download and delete data stored in Firestore.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"version.js")," is the script used to keep track of which version of the task a given experiment is using."))),(0,a.yg)("admonition",{type:"caution"},(0,a.yg)("p",{parentName:"admonition"},(0,a.yg)("inlineCode",{parentName:"p"},"cli.mjs")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"version.js")," are automated scripts and should not be edited."),(0,a.yg)("p",{parentName:"admonition"},(0,a.yg)("inlineCode",{parentName:"p"},"package-lock.json")," is written to when running ",(0,a.yg)("inlineCode",{parentName:"p"},"npm install")," and should never be edited.")),(0,a.yg)("h3",{id:"firebase-files"},"Firebase Files"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},".firebaserc")," contains the name of the project Firebase should connect to. Be sure to update the default project to the one you created!"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"firebase.json")," contains the Firebase settings for Honeycomb."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"firestore.indexes.json")," contains the Firestore index settings for Honeycomb."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"firestore.rules")," contains the Firestore rules for creating/editing data.")),(0,a.yg)("admonition",{type:"caution"},(0,a.yg)("p",{parentName:"admonition"},(0,a.yg)("inlineCode",{parentName:"p"},"firebase.json")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"firestore.indexes.json")," are default configs and shouldn't need to be edited.")),(0,a.yg)("h3",{id:"git-files"},"Git Files"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},".gitignore")," lists the folders and files that should be excluded from Git.")),(0,a.yg)("admonition",{type:"caution"},(0,a.yg)("p",{parentName:"admonition"},"Any secrets and/or tokens must be added to ",(0,a.yg)("inlineCode",{parentName:"p"},".gitignore")," or they will be visible to anyone with access to the repository!")),(0,a.yg)("h3",{id:"eslint-files"},"Eslint Files"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},".eslintrc.js")," contains the Eslint settings for Honeycomb. We recommend it's left alone but can be adjusted for personal preference."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},".eslintignore")," lists the folders and files that eslint shouldn't touch, similar to ",(0,a.yg)("inlineCode",{parentName:"li"},".gitignore"),".")),(0,a.yg)("h3",{id:"prettier-files"},"Prettier Files"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},".prettierrc.js")," contains the Prettier settings for Honeycomb. We recommend it's left alone but can be adjusted for personal preference."))}u.isMDXComponent=!0}}]);